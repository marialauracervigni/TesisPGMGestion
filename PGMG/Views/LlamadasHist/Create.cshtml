@model PGMG.Models.LlamadaHist
@using Microsoft.AspNet.Identity
@using App.Extensions

@{
    ViewBag.Title = "Cargar nueva llamada";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    var NomUsuario = User.Identity.GetNombreCompleto();
    var IdUsuario = User.Identity.GetUserId();

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class="col-md-10">
                @Html.HiddenFor(model => model.ClienteId, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.ClienteId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreCliente, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="text" id="nombre" @Html.EditorFor(model => model.NombreCliente, new { htmlAttributes = new { @class = "form-control" } })
                       @Html.ValidationMessageFor(model => model.NombreCliente, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NombreEmpleado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NombreEmpleado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.NombreEmpleado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Fecha, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Fecha, "{0:dd/MM/yyyy}",
                    new { @class = "form-control datepicker" , @Value = @DateTime.Now.ToShortDateString() })
                @Html.ValidationMessageFor(model => model.Fecha, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Hora, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextBoxFor(model => model.Hora, "{0:hh:MM}",
                    new { @class = "form-control", @Value = DateTime.Now.ToShortTimeString() })
                @Html.ValidationMessageFor(model => model.Hora, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Usuario, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.Usuario, ViewData["usuarioactual"] as SelectList,
                new { @class = "form-control"  })
                @Html.ValidationMessageFor(model => model.Usuario, "", new { @class = "text-danger" })
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.FormaDeComunicacionId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.DropDownListFor(model => model.FormaDeComunicacionId, ViewData["formadecomun"] as SelectList,
                        "Seleccione la forma de comunicación", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.FormaDeComunicacionId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <label class="col-md-2 control-label">
                Seleccione la forma de comunicación
            </label>
            <div class="col-md-10">
                @foreach (var item in (SelectList)ViewBag.formadecomun)
                {
                    @*<input type="radio" name="FormaDeComunicacionId" value="@item.Value" class="checkbox-inline" />
                        @Html.Label(item.Text, new { @class = "control-label" })*@
                    @Html.RadioButtonFor(model => model.FormaDeComunicacionId, item.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Label(item.Text, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.FormaDeComunicacionId, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        @*<div class="form-group">
                @Html.LabelFor(model => model.Codigo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.ListBoxFor(model => model.CodigoTareaId, ViewData["codTarea"] as MultiSelectList, new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CodigoTareaId, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Tema, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Tema, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Tema, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">
                Seleccione los códigos utilizados
            </label>
            <div class="col-md-10">
                @foreach (var item in (SelectList)ViewBag.codTarea)
                {
                    @*<input type="checkbox" name="CodigoTareaId" value="@item.Value" class="checkbox" />
                        @Html.Label(item.Text, new { @class = "control-label" })*@


                    @*@Html.CheckBoxFor( model => model.seleccionado, item.Value,
                        new { htmlAttributes = new { @class = "form-control" } })*@
                    @*@Html.CheckBoxFor(model => model.seleccionado, new { @checked = "checked" })*@
                    @*@Html.CheckBoxFor(model => model.seleccionado, new { @class = "form-control",
                        Name = "CodigoTareaId" })*@

                    @Html.CheckBoxFor(model => model.seleccionado, new { Style = "vertical-align:3px", Name = "CodigoTareaId" })
                    @Html.Label(item.Text, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.CodigoTareaId, "", new { @class = "text-danger" })


                }

                }
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Descripcion, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Descripcion, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Descripcion, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TiempoEnLlamado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TiempoEnLlamado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TiempoEnLlamado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TiempoPostLlamado, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TiempoPostLlamado, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TiempoPostLlamado, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">
                Seleccione el estado del llamado
            </label>
            <div class="col-md-10">
                @foreach (var item in (SelectList)ViewBag.estado)
                {
                    @*<input type="radio" name="EstadoId" value="@item.Value" class="checkbox-inline" />*@
                    @Html.RadioButtonFor(model => model.EstadoId, item.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Label(item.Text, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.EstadoId, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            <label class="col-md-2 control-label">
                Seleccione la prioridad
            </label>
            <div class="col-md-10">
                @foreach (var item in (SelectList)ViewBag.Etiqueta)
                {
                    @*<input type="radio" name="EtiquetaId" value="@item.Value" class="checkbox-inline" disabled="disabled" />*@
                    @Html.RadioButtonFor(model => model.EtiquetaId, item.Value, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.Label(item.Text, new { @class = "control-label" })
                    @Html.ValidationMessageFor(model => model.EtiquetaId, "", new { @class = "text-danger" })
                }
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Guardar" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@section scripts{
    <script>
    $('.datepicker').datepicker({
        format: 'dd/mm/yyyy',
        autoclose: true,
        language: 'es'
    });

    $('#nombre')
    .autocomplete({
        source: '@Url.Action("Lista","Clientes")',minLength:3,
        select: function (event, ui) {
            $('#ClienteId').val(ui.item.id);
            $('#nombre').val(ui.item.value);
            return false;
        }
        });
    </script>
}
