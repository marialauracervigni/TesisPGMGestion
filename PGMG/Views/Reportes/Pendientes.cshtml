@model PGMG.Models.ReporteLlamadasViewModel
@{
    ViewBag.Title = "Pendientes";
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    <div class="form-horizontal centrar">
        @Html.LabelFor(model => model.Desde, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Desde, "{0:dd/MM/yyyy}",
         new { @class = "login datepicker"})
        @Html.ValidationMessageFor(model => model.Desde, "", new { @class = "text-danger" })

        @Html.LabelFor(model => model.Hasta, htmlAttributes: new { @class = "control-label" })
        @Html.TextBoxFor(model => model.Hasta, "{0:dd/MM/yyyy}",
         new { @class = "login datepicker" })
        @Html.ValidationMessageFor(model => model.Hasta, "", new { @class = "text-danger" })
        <input type="submit" value="Generar" id="submit" class="btn btn-default" />
    </div>
    <br />
}

    <div class="row wow fadeIn">
        <div class="col-md-7 mb-5">
            <br /><br />
            <div class="card">
                <div class="card-header text-center">
                    Pendientes ingresados por día
                </div>
                <div class="card-body">
                    <canvas id="pendientessemana"></canvas>
                </div>
            </div>
        </div>
        <div class="col-md-4 mb-4">
            <div class="card mb-2">
                <div class="card-header">Pendientes ingresados según prioridad</div>
                <div class="card-body">
                    <canvas id="PendientesPorFecha"></canvas>
                </div>
            </div>
            <div class="card mb-2">
                <div class="card-header">Pendientes cerrados según prioridad</div>
                <div class="card-body">
                    <canvas id="PendientesCerrados"></canvas>
                </div>
            </div>
        </div>
    </div>

<div class="row wow fadeIn">
    <div class="col-lg-6 col-md-6 mb-4">
        <div class="card">
            <div class="card-header">Pendientes en total</div>
            <div class="card-body">
                <canvas id="totalpendientes"></canvas>
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6 mb-4">
        <div class="card">
            <div class="card-header">Pendientes ingresados por mes</div>
            <div class="card-body">
                <canvas id="PendientesPorMes"></canvas>
            </div>
        </div>
    </div>
</div>

<div class="row wow fadeIn">
    <div class="col-lg-6 col-md-6 mb-4">
        <div class="card">
            <div class="card-header">Top 10 pendientes por cliente </div>
            <div class="card-body">
                @Html.Action("RankingPendientes")
            </div>
        </div>
    </div>
    <div class="col-lg-6 col-md-6 mb-4">
        <div class="card">
            <div class="card-header">Top 10 pendientes por usuario</div>
            <div class="card-body">
                @Html.Action("RankingPendientesPorUsuario")
            </div>
        </div>
    </div>
</div>


@section scripts {
    <script type="text/javascript" src="~/Scripts/wow.js"></script>
    <script type="text/javascript" src="~/Scripts/wow.min.js"></script>
    <script type="text/javascript" src="~/Scripts/chart.js"></script>

    <script>
        $('.datepicker').datepicker({
            format: 'dd/mm/yyyy',
            autoclose: true,
            language: 'es'
        });

        //Total Pendientes//
        var penArray = @Html.Raw(Json.Encode(ViewBag.TP));
        var pen = @Html.Raw(Json.Encode(ViewBag.TP2));
        var ctx = document.getElementById("totalpendientes").getContext("2d");

        var charttt = new Chart(ctx, {
        type: 'pie',
        data: {
        labels: pen,
        datasets: [{
        data: penArray,
        backgroundColor: ["#3cb371", "#6a5acd", "#6ca8ff"],
        hoverBackgroundColor: ["#84dd8e", "#8e93ff", "#a3cfff"]
        }]
        },
        });

        var Cantidades = @Html.Raw(Json.Encode(ViewBag.PPD));
        var Dias = @Html.Raw(Json.Encode(ViewBag.PPD2));

        var ctx = document.getElementById("pendientessemana").getContext('2d');
        var myChart = new Chart(ctx, {
        type: 'bar',
        data: {
        labels: Dias,
        datasets: [{
        label: 'Cantidad de pendientes',
        data: Cantidades,
        backgroundColor:'rgba(163, 207, 255, 0.2)',
        borderColor:'rgba(108, 168, 255, 1)',
        borderWidth: 1
        }]
        },
        options: {
        scales: {
        yAxes: [{
            ticks: {
                min: 0,
                max: 100,
                stepSize: 20,
                beginAtZero: true
        }
        }]
        }
        }
        });

        //Total pendientes por fecha//
        var pps = @Html.Raw(Json.Encode(ViewBag.PPS));
        var etiqueta = @Html.Raw(Json.Encode(ViewBag.PPS2));
        var ctx2 = document.getElementById("PendientesPorFecha").getContext("2d");

        var charttt = new Chart(ctx2, {
        type: 'pie',
        data: {
            labels: etiqueta,
        datasets: [{
        data: pps,
        backgroundColor: ["#3cb371", "#6a5acd", "#6ca8ff"],
        hoverBackgroundColor: ["#84dd8e", "#8e93ff", "#a3cfff"]
        }]
        },
        });

        //Total pendientes cerrados por fecha//
        var penArray = @Html.Raw(Json.Encode(ViewBag.PCF));
        var etique = @Html.Raw(Json.Encode(ViewBag.PCF2));

        var ctx = document.getElementById("PendientesCerrados").getContext("2d");

        var charttt = new Chart(ctx, {
        type: 'pie',
        data: {
            labels: etique,
        datasets: [{
        data: penArray,
        backgroundColor: ["#3cb371", "#6a5acd", "#6ca8ff"],
        hoverBackgroundColor: ["#84dd8e", "#8e93ff", "#a3cfff"]
        }]
        },
        });


        //LLAMADAS POR MES//
        var Cantidad = @Html.Raw(Json.Encode(ViewBag.PPM));
        var Dias = @Html.Raw(Json.Encode(ViewBag.PPM2));

        new Chart(document.getElementById("PendientesPorMes"), {
            "type": "horizontalBar",
            "data": {
                "labels": Dias,
                "datasets": [{
                    "label": "Cantidad de pendientes",
                    "data": Cantidad,
                    "fill": false,
                    "backgroundColor": "#3cb371",
                    "borderColor": "#3cb371",
                    "hoverBackgroundColor": "#84dd8e",
                    "borderWidth": 1
                }]
            },
            "options": {
                "scales": {
                    "xAxes": [{
                        "ticks": {
                            "beginAtZero": true,
                            "stepSize": 40

                        }
                    }],
                    "yAxes": [{
                        "ticks": {
                            "beginAtZero": true,
                            "max":12
                        }
                    }],
                }
            }
        });
    </script>
}
