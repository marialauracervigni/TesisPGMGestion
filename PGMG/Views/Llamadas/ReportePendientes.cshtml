@using PagedList.Mvc;
@model PagedList.PagedList<PGMG.Models.LlamadaViewModel>

@{
    ViewBag.Title = "Tareas pendientes por cliente";
}

<div class="form-group">
    <div class="centrar">
        <h4>@ViewBag.Title</h4>
        <hr />
        <div class="row">
            <div class="col-sm-8">
            </div>
            <div class="col-sm-4">
                <input id="buscar" type="text" class="login" placeholder="Escriba algo para filtrar" />
            </div>
        </div>
        <br />
        <table id="tabla" class="table table-striped">
            <thead>
                <tr>
                    <th style="text-align: center" onclick="sortTable(0)">Fecha y Hora</th>
                    <th style="text-align: center" onclick="sortTable(1)">Tema</th>
                    <th style="text-align: center" onclick="sortTable(2)">Descripción</th>
                    <th style="text-align: center" onclick="sortTable(3)">Usuario</th>
                    <th style="text-align: center" onclick="sortTable(4)">Empleado</th>
                    <th style="text-align: center" onclick="sortTable(5)">Estado</th>
                    <th style="text-align: center" onclick="sortTable(6)">Prioridad</th>
                    <th style="text-align: center">Acción</th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {

                    <tr>
                        <td>
                            @item.Fecha.ToShortDateString() @item.Hora.ToShortTimeString()
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Tema)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Descripcion)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Usuario)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.NombreE)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Estado)
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Etiqueta)
                        </td>
                        <td class="desaparecerTemporalmente">
                            <a href="@Url.Action("GestionarLlamadasPendientes", new { id = item.LlamadaId })" class="btn btn-default"
                               data-toggle="tooltip" title="Modificar tarea pendiente">
                                <span class="glyphicon glyphicon-edit" aria-hidden="true"></span>
                            </a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <a class="btn btn-default" onclick="exportTableToExcel('tblData')" title="Exportar a Excel">
            <span class="glyphicon glyphicon-save" aria-hidden="true"></span>
        </a>
        <a class="btn btn-default" onclick="exportTableToPDF()" title="Exportar a PDF">
            <span class="glyphicon glyphicon-save-file" aria-hidden="true"></span>
        </a>
        <br />
        <br />
        Página @(Model.PageCount < Model.PageNumber ? 0 : Model.PageNumber) de @Model.PageCount
        <br />
        Total llamadas del cliente @Model.TotalItemCount

        @Html.PagedListPager(Model, page => Url.Action("ReportePendientes", "Llamadas",
       new { page, pageSize = ViewBag.PageSize}))
    </div>
</div>


@section Scripts{
    <script>
        var textbuscar = document.getElementById("buscar");
        textbuscar.onkeyup = function () {
            buscar(this);
        }
        function buscar(inputbuscar) {
            var valorabuscar = (inputbuscar.value).toLowerCase().trim();
            var tabla_tr = document.getElementById("tabla").getElementsByTagName("tbody")[0].rows;
            for (var i = 0; i < tabla_tr.length; i++) {
                var tr = tabla_tr[i];
                var textotr = (tr.innerText).toLowerCase();
                tr.className = (textotr.indexOf(valorabuscar) >= 0) ? "mostrar" : "ocultar";
            }
        }

        function sortTable(n) {
            var table, rows, switching, i, x, y, shouldSwitch, dir, switchcount = 0;
            table = document.getElementById("tabla");
            switching = true;
            dir = "asc";
            while (switching) {
                switching = false;
                rows = table.rows;
                for (i = 1; i < (rows.length - 1); i++) {
                    shouldSwitch = false;
                    x = rows[i].getElementsByTagName("TD")[n];
                    y = rows[i + 1].getElementsByTagName("TD")[n];
                    if (dir == "asc") {
                        if (x.innerHTML.toLowerCase() > y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    } else if (dir == "desc") {
                        if (x.innerHTML.toLowerCase() < y.innerHTML.toLowerCase()) {
                            shouldSwitch = true;
                            break;
                        }
                    }
                }
                if (shouldSwitch) {
                    rows[i].parentNode.insertBefore(rows[i + 1], rows[i]);
                    switching = true;
                    switchcount++;
                } else {
                    if (switchcount == 0 && dir == "asc") {
                        dir = "desc";
                        switching = true;
                    }
                }
            }
        }

        function exportTableToExcel(tableID, filename = '') {
            var downloadLink;
            var dataType = 'application/vnd.ms-excel';
            var tableSelect = document.getElementById("tabla");
            var tableHTML = tableSelect.outerHTML.replace(/ /g, '%20');

            filename = filename ? filename + '.xls' : 'Pendientess.xls';
            downloadLink = document.createElement("a");
            document.body.appendChild(downloadLink);

            if (navigator.msSaveOrOpenBlob) {
                var blob = new Blob(['ufeff', tableHTML], {
                    type: dataType
                });
                navigator.msSaveOrOpenBlob(blob, filename);
            } else {
                downloadLink.href = 'data:' + dataType + ', ' + tableHTML;
                downloadLink.download = filename;
                downloadLink.click();
            }
        }

        function exportTableToPDF() {
            //Seleccionamos TODOS los elementos que tienen esta clase "desaparecerTemporalmente y le damos un display none"
            $(".desaparecerTemporalmente").css("display", "none");
            html2canvas(document.getElementById('tabla'), {
                onrendered: function (canvas) {
                    var data = canvas.toDataURL();
                    var docDefinition = {
                        content: [{
                            image: data,
                            width: 500
                        }]
                    };
                    pdfMake.createPdf(docDefinition).download("Pendientes.pdf");
                }
            });
            //Ahora que ya fue exportado, regresamos los botones a su sitio:
            $(".desaparecerTemporalmente").css("display", "");
        }
    </script>
}

